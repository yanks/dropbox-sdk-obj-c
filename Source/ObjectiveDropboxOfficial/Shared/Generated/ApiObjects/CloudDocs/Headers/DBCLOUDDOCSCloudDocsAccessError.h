///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>

#import "DBSerializableProtocol.h"

@class DBCLOUDDOCSCloudDocsAccessError;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - API Object

///
/// The `CloudDocsAccessError` union.
///
/// This class implements the `DBSerializable` protocol (serialize and
/// deserialize instance methods), which is required for all Obj-C SDK API route
/// objects.
///
@interface DBCLOUDDOCSCloudDocsAccessError : NSObject <DBSerializable, NSCopying>

#pragma mark - Instance fields

/// The `DBCLOUDDOCSCloudDocsAccessErrorTag` enum type represents the possible
/// tag states with which the `DBCLOUDDOCSCloudDocsAccessError` union can exist.
typedef NS_CLOSED_ENUM(NSInteger, DBCLOUDDOCSCloudDocsAccessErrorTag){
    /// The Cloud Doc ID is invalid.
    DBCLOUDDOCSCloudDocsAccessErrorInvalidDocId,

    /// A Cloud Doc could not be found for the given ID.
    DBCLOUDDOCSCloudDocsAccessErrorNotFound,

    /// Permission denied for the Cloud Doc with the given ID.
    DBCLOUDDOCSCloudDocsAccessErrorPermissionDenied,

    /// (no description).
    DBCLOUDDOCSCloudDocsAccessErrorOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBCLOUDDOCSCloudDocsAccessErrorTag tag;

#pragma mark - Constructors

///
/// Initializes union class with tag state of "invalid_doc_id".
///
/// Description of the "invalid_doc_id" tag state: The Cloud Doc ID is invalid.
///
/// @return An initialized instance.
///
- (instancetype)initWithInvalidDocId;

///
/// Initializes union class with tag state of "not_found".
///
/// Description of the "not_found" tag state: A Cloud Doc could not be found for
/// the given ID.
///
/// @return An initialized instance.
///
- (instancetype)initWithNotFound;

///
/// Initializes union class with tag state of "permission_denied".
///
/// Description of the "permission_denied" tag state: Permission denied for the
/// Cloud Doc with the given ID.
///
/// @return An initialized instance.
///
- (instancetype)initWithPermissionDenied;

///
/// Initializes union class with tag state of "other".
///
/// @return An initialized instance.
///
- (instancetype)initWithOther;

- (instancetype)init NS_UNAVAILABLE;

#pragma mark - Tag state methods

///
/// Retrieves whether the union's current tag state has value "invalid_doc_id".
///
/// @return Whether the union's current tag state has value "invalid_doc_id".
///
- (BOOL)isInvalidDocId;

///
/// Retrieves whether the union's current tag state has value "not_found".
///
/// @return Whether the union's current tag state has value "not_found".
///
- (BOOL)isNotFound;

///
/// Retrieves whether the union's current tag state has value
/// "permission_denied".
///
/// @return Whether the union's current tag state has value "permission_denied".
///
- (BOOL)isPermissionDenied;

///
/// Retrieves whether the union's current tag state has value "other".
///
/// @return Whether the union's current tag state has value "other".
///
- (BOOL)isOther;

///
/// Retrieves string value of union's current tag state.
///
/// @return A human-readable string representing the union's current tag state.
///
- (NSString *)tagName;

@end

#pragma mark - Serializer Object

///
/// The serialization class for the `DBCLOUDDOCSCloudDocsAccessError` union.
///
@interface DBCLOUDDOCSCloudDocsAccessErrorSerializer : NSObject

///
/// Serializes `DBCLOUDDOCSCloudDocsAccessError` instances.
///
/// @param instance An instance of the `DBCLOUDDOCSCloudDocsAccessError` API
/// object.
///
/// @return A json-compatible dictionary representation of the
/// `DBCLOUDDOCSCloudDocsAccessError` API object.
///
+ (nullable NSDictionary<NSString *, id> *)serialize:(DBCLOUDDOCSCloudDocsAccessError *)instance;

///
/// Deserializes `DBCLOUDDOCSCloudDocsAccessError` instances.
///
/// @param dict A json-compatible dictionary representation of the
/// `DBCLOUDDOCSCloudDocsAccessError` API object.
///
/// @return An instantiation of the `DBCLOUDDOCSCloudDocsAccessError` object.
///
+ (DBCLOUDDOCSCloudDocsAccessError *)deserialize:(NSDictionary<NSString *, id> *)dict;

@end

NS_ASSUME_NONNULL_END
